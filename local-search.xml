<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用Hexo搭建博客并部署在自己的服务器上</title>
    <link href="/2023/04/15/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E9%83%A8%E7%BD%B2%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/"/>
    <url>/2023/04/15/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%8F%8A%E9%83%A8%E7%BD%B2%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>本教程将会教会你如何从本地进行博客调试然后推送到自己的服务器上，最后用户只需输入你的域名即可访问你的博客。</li><li>此教程需要一个外部服务器。</li><li>信息来源：<ul><li>Hexo官网：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></li><li>Archlinux官网（中国）：<a href="https://wiki.archlinuxcn.org/wiki/Nginx">https://wiki.archlinuxcn.org/wiki/Nginx</a></li><li>只会玩辅助的博客：<a href="https://www.cnblogs.com/wangcuican/p/12522239.html">https://www.cnblogs.com/wangcuican/p/12522239.html</a></li></ul></li><li>图床支持：<a href="https://imgloc.com/">https://imgloc.com/</a></li></ul><h1 id="本地上的准备工作（Windows环境）"><a href="#本地上的准备工作（Windows环境）" class="headerlink" title="本地上的准备工作（Windows环境）"></a>本地上的准备工作（Windows环境）</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><ol><li>从官网下载<a href="https://nodejs.org/en">Node.js</a></li><li>下载到本地后，默认安装就行</li></ol><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p> 打开cmd，输入<code>npm install -g hexo-cli</code> 看到以下内容就说明安装成功了<a href="https://imgloc.com/i/iEfifQ"><img src="https://i.328888.xyz/2023/04/15/iEfifQ.md.png" alt="iEfifQ.png" border="0" /></a></p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p><a href="https://git-scm.com/download/win">官网下载Git</a>,下载完成后默认安装就可以了</p><h1 id="服务器上的准备工作（Archlinux环境）-此步并没有什么卵用，可以滤过"><a href="#服务器上的准备工作（Archlinux环境）-此步并没有什么卵用，可以滤过" class="headerlink" title="服务器上的准备工作（Archlinux环境）[此步并没有什么卵用，可以滤过]"></a>服务器上的准备工作（Archlinux环境）<br>[此步并没有什么卵用，可以滤过]</h1><h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><blockquote><p>pacman -S git</p></blockquote><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>这里大家就随意发挥吧。</p><h1 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h1><h2 id="本地搭建"><a href="#本地搭建" class="headerlink" title="本地搭建"></a>本地搭建</h2><p> 本地搭建博客是为了更好的编写文章，相比服务器上枯燥的黑底白字，Windows上的编辑器用起来更加的舒服。而且，在本地可以及时查看博客生成的网页，并作出修改。万事俱备后，就可上传到服务器了。</p><h3 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h3><p>在本地上新建个文件夹，我命名为Blog，大家可以随便取名字。<br><br>进入到Blog，然后<em><strong>在当前目录</strong></em>打开cmd。<br><br>在CMD中输入<code>hexo i</code>此命令会在Blog文件夹中生成若干文件。<br><br>接着输入<code>hexo g</code><br><br><a href="https://imgloc.com/i/iEUbnt"><img src="https://i.328888.xyz/2023/04/15/iEUbnt.md.png" alt="iEUbnt.png" border="0" /></a><br><br>待命令完成后，输入<code>hexo s</code> ，浏览器打开箭头所指的网址，要是看见hello，world说明本地搭建已经成功啦<br><br><a href="https://imgloc.com/i/iEUjRJ"><img src="https://i.328888.xyz/2023/04/15/iEUjRJ.md.png" alt="iEUjRJ.png" border="0" /></a></p><h3 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h3><p>在博客文件夹里打开CMD输入<code>hexo n &lt;博客的标题&gt;</code>，就会生成一个后缀名为md的文档。<br><a href="https://imgloc.com/i/iEU7oa"><img src="https://i.328888.xyz/2023/04/15/iEU7oa.png" alt="iEU7oa.png" border="0" /></a><br><br>我们要编写那个文档，支持Markdown和html，内容编写好后就使用<code>hexo g</code> 来生成html文件，他们储存在<code>/Blog/public</code>里，你可以通过<code>hexo s</code>来查看实际的效果</p><h3 id="使用Git来实现本地和服务器的同步，当然，你也可以直接使用FTP来传送文件。"><a href="#使用Git来实现本地和服务器的同步，当然，你也可以直接使用FTP来传送文件。" class="headerlink" title="使用Git来实现本地和服务器的同步，当然，你也可以直接使用FTP来传送文件。"></a>使用Git来实现本地和服务器的同步，当然，你也可以直接使用FTP来传送文件。</h3><ul><li>建立本地仓库<ul><li>进入Blog文件夹，鼠标右键，选择<code>Git Bash Here</code></li><li>在git终端输入<code>git init</code><br><br>  <a href="https://imgloc.com/i/iEUJyZ"><img src="https://i.328888.xyz/2023/04/15/iEUJyZ.png" alt="iEUJyZ.png" border="0" /></a></li><li>将本地代码放入暂存区 ，输入 <code>git add . </code>(add 后有个点，别漏了) <br><br>  <a href="https://imgloc.com/i/iEUYtX"><img src="https://i.328888.xyz/2023/04/15/iEUYtX.md.png" alt="iEUYtX.png" border="0" /></a></li><li>输入<code>git status</code> 若文件都是绿色说明没有问题。<br><br>  <a href="https://imgloc.com/i/iEnfGo"><img src="https://i.328888.xyz/2023/04/15/iEnfGo.png" alt="iEnfGo.png" border="0" /></a></li><li>输入git commit -m ‘ 提交信息’    把暂存区的文件放到版本库中<br>  <a href="https://imgloc.com/i/iEnO2p"><img src="https://i.328888.xyz/2023/04/15/iEnO2p.md.png" alt="iEnO2p.png" border="0" /></a></li></ul></li><li>推送代码到Github<ul><li>在github上建立一个库</li><li>生成并部署公钥<blockquote><p>本机命令，生成公钥：ssh-keygen -t rsa -C “<em>@</em>.com”  邮箱可以任意填写<br><br>本机命令，查看公钥：cat ~&#x2F;.ssh&#x2F;id_rsa.pub   查看之后然后copy<br>github线上添加公钥：项目仓库 &#x3D;&gt; settings &#x3D;&gt; SSH and GPG keys &#x3D;&gt; New SSH key <br><br>  把生成的公钥填入即可。</p></blockquote></li><li>本地仓库与远程仓库建立连接，添加远程源，这里我们采用ssh协议<blockquote><p>git remote add origin <a href="mailto:&#x67;&#x69;&#116;&#x40;&#103;&#x69;&#116;&#x68;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;">&#x67;&#x69;&#116;&#x40;&#103;&#x69;&#116;&#x68;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;</a>:qza36&#x2F;PocchiBlog.git      #origin是远程源的名字<br>  <a href="https://imgloc.com/i/iEtB3w"><img src="https://i.328888.xyz/2023/04/16/iEtB3w.png" alt="iEtB3w.png" border="0" /></a></p></blockquote></li><li>提交本地仓库代码到远程仓库<blockquote><p>git push -u origin master origin是远程源的源名，可以自定义；master是分支名，是默认的主分支</p></blockquote></li><li>至此，本地搭建到推送代码到远程仓库教程已结束</li></ul></li></ul><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h2><h1 id="新建博客-1"><a href="#新建博客-1" class="headerlink" title="新建博客"></a>新建博客</h1><ul><li>在<code>/home</code>目录下建立一个空文件夹,就叫Blog吧。</li><li>然后在终端输入<code>git init</code></li><li>生成并部署公钥<blockquote><p>本机命令，生成公钥：ssh-keygen -t rsa -C “<em>@</em>.com”  邮箱可以任意填写<br><br>本机命令，查看公钥：cat ~&#x2F;.ssh&#x2F;id_rsa.pub   查看之后然后copy<br>github线上添加公钥：项目仓库 &#x3D;&gt; settings &#x3D;&gt; SSH and GPG keys &#x3D;&gt; New SSH key <br><br>  把生成的公钥填入即可。</p></blockquote></li><li>本地仓库与远程仓库建立连接，添加远程源，这里我们采用ssh协议<blockquote><p>git remote add origin <a href="mailto:&#103;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#98;&#46;&#x63;&#111;&#x6d;">&#103;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#98;&#46;&#x63;&#111;&#x6d;</a>:qza36&#x2F;PocchiBlog.git      #origin是远程源的名字<br>  <a href="https://imgloc.com/i/iEtB3w"><img src="https://i.328888.xyz/2023/04/16/iEtB3w.png" alt="iEtB3w.png" border="0" /></a></p></blockquote></li><li>拉取远程仓库代码<blockquote><p>git pull origin master</p></blockquote></li></ul><h1 id="代理服务器（Nginx）安装及配置"><a href="#代理服务器（Nginx）安装及配置" class="headerlink" title="代理服务器（Nginx）安装及配置"></a>代理服务器（Nginx）安装及配置</h1><ol><li><p>安装Nginx，<code>pacman -S Nginx</code></p></li><li><p>修改配置文件，<code>vim /etc/nginx/nginx.conf</code> 找到以下内容，修改<code> root</code>后面的内容。<br><br>这个代码的意思是：Nginx会在<code> /home/blog/publc</code>里寻找<code>index.html index.html</code><a href="https://imgloc.com/i/iEycJc"><img src="https://i.328888.xyz/2023/04/15/iEycJc.md.png" alt="iEycJc.png" border="0" /></a><br><br><i><strong>注意</strong> </i>: 不推荐将博客文件夹建立在<i>操作系统</i>root目录下，这样做可能会导致404错误。</p></li><li><p>修改后保存，然后在在终端输入<code>nginx -s reload</code> </p></li><li><p>记得打开防火墙</p><blockquote><p>sudo ufw allow htttp</p></blockquote></li><li><p>输入自己的域名就可以访问啦（前提是要把自己的域名解析到服务器哦）</p></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>一定要<code>hexo g</code>后提交代码</li><li>不要在root目录下建博客文件夹！</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Archlinux介绍</title>
    <link href="/2023/04/14/Archlinux%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/04/14/Archlinux%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="ArchLinux简介"><a href="#ArchLinux简介" class="headerlink" title="ArchLinux简介"></a>ArchLinux简介</h1><p>ArchLinux是一款轻量级、高度可定制的Linux发行版。相比于其他发行版，它更侧重于提供基础软件包和快速滚动更新，而不是为用户预装大量软件。</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><h3 id="简洁快速"><a href="#简洁快速" class="headerlink" title="简洁快速"></a>简洁快速</h3><p>ArchLinux体积较小，核心只安装了最基本的文件和驱动程序，并具有先进的软件包管理系统。这使得操作系统整体性能非常高，并且可以节省处理器和内存资源。</p><h3 id="高定制性"><a href="#高定制性" class="headerlink" title="高定制性"></a>高定制性</h3><p>ArchLinux可自定义程度极高，用户可以根据需要选择安装或卸载特定的应用程序或服务。</p><p>另外，ArchLinux还提供灵活的网络配置选项，并支持多种文件系统格式，如Btrfs、XFS、EXT4等。</p><h3 id="安全稳定"><a href="#安全稳定" class="headerlink" title="安全稳定"></a>安全稳定</h3><p>由于会定期发布一组新软件包集合，因此应用程序保持新鲜，</p><p>同时，社区也对ArchLinux进行分析和测试，以确保所有的软件库都可靠。</p><p>此外，ArchLinux使用Sudo命令来授予和限制管理员权限，从而在保证系统准入时堡垒原则不必牺牲自由。</p><h2 id="该博客被部署在运行Arch-Linux的服务器上"><a href="#该博客被部署在运行Arch-Linux的服务器上" class="headerlink" title="该博客被部署在运行Arch Linux的服务器上"></a>该博客被部署在运行Arch Linux的服务器上</h2><p>如果您对ArchLinux感兴趣并想了解更多信息，请访问官方网站：<a href="https://www.archlinux.org/">https://www.archlinux.org/</a>。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
